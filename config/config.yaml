# Basic config File
# Where is the workflow
wdir: "/vol/cloud/geogenetics/repos/metaDMG-simulations"
# Where is the data
sdir: "/vol/cloud/geogenetics/metaDMG-sims/synthetic-data/data"
# Where is the output
rdir: "/vol/cloud/geogenetics/metaDMG-sims/synthetic-data/results"

# A list of all the samples to be simulated
sample_file_read: "/vol/cloud/geogenetics/metaDMG-sims/synthetic-data/assets/samples.tsv"

###############################################################################
#
# Common config values
#
###############################################################################

# Read https://github.com/genomewalker/aMGSIM/ for the configuration details

# aMGSIM config files
fb_config_file: "/vol/cloud/geogenetics/metaDMG-sims/synthetic-data/assets/config/fb-config.yml"
ag_config_file: "/vol/cloud/geogenetics/metaDMG-sims/synthetic-data/assets/config/ag-config.yml"
ar_config_file: "/vol/cloud/geogenetics/metaDMG-sims/synthetic-data/assets/config/ar-config.yml"
cpus: 16
pa_threads: 3
pa_procs: 16
prot_threads: 48
# aMGSIM config files
# fb_config
genome_paths: /vol/cloud/geogenetics/metaDMG-sims/synthetic-data/assets/genome-paths-list.tsv
names_dmp: /vol/cloud/geogenetics/DBs/gtdb/r202/data/vanilla-organelles-virus/pkg/taxonomy/names.dmp
nodes_dmp: /vol/cloud/geogenetics/DBs/gtdb/r202/data/vanilla-organelles-virus/pkg/taxonomy/nodes.dmp
acc2taxid: /vol/cloud/geogenetics/DBs/gtdb/r202/data/vanilla-organelles-virus/pkg/taxonomy/acc2taxid.map.gz
# Should we reestimate the abundances after the genome selection?
use_restimated_proportions: True
# How to filter the filterBAM-stats data
filterbam_filter_conditions: '{ "breadth_exp_ratio": 0.75, "coverage_mean": 0, "n_reads": 100}'
# How to filter the metaDMG data
metadmg_filter_conditions: '{ "damage": 0.1, "significance": 2 }'
# Which ranks we would like to keep
rank_filter_conditions: '{ "superkingdom": ["d__Bacteria", "d__Archaea", "d__Viruses"] }'
# Taxonomic rank where to aggregate and pick the genomes
# We will select the target taxonomic rank, and choose by random or by most abundant or
# by least abundance. Then we will try to get one genome out of each taxonomic rank, if
# the selected number of genomes is not fulfilled we will look for another rank.
taxonomic_rank: "genus"
# Number of non-damaged genomes
max_genomes_nondamaged: 50
# How to select the non-damaged genomes: random, most_abundant, least_abundant
max_genomes_nondamaged_selection: "most_abundant"
# Number of damaged genomes
max_genomes_damaged: 100
# How to select the damaged genomes: random, most_abundant, least_abundant
max_genomes_damaged_selection: "most_abundant"

# ag_config
# Maximum number of reads we want to generate
# As we are modeling the empirical properties of the sample we might generate
# less reads than the ones we define
num_reads: [1e6, 5e6, 10e6, 50e6, 100e6]
# single or paired
seq_library: ["single"]
# Which sequencing technology we are using
seq_system: "HS25"
# Read length
seq_read_length: 125
remove_adapters: True

do_proteins: False
